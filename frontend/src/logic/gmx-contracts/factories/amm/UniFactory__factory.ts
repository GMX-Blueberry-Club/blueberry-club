/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { UniFactory, UniFactoryInterface } from "../../amm/UniFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060e38061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80631698ee8214602d575b600080fd5b606660048036036060811015604157600080fd5b5080356001600160a01b03908116916020810135909116906040013562ffffff166082565b604080516001600160a01b039092168252519081900360200190f35b600060208181529381526040808220855292815282812090935282529020546001600160a01b03168156fea264697066735822122040c96d6664772ed85a199da374e1ec74fbd2b406c7d81b818870a9f12a3bb6e564736f6c634300060c0033";

type UniFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniFactory__factory extends ContractFactory {
  constructor(...args: UniFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniFactory__factory {
    return super.connect(runner) as UniFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniFactoryInterface {
    return new Interface(_abi) as UniFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UniFactory {
    return new Contract(address, _abi, runner) as unknown as UniFactory;
  }
}
