/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, ContractRunner } from "ethers";
import type {
  IHandlerTarget,
  IHandlerTargetInterface,
} from "../../../peripherals/interfaces/IHandlerTarget";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isHandler",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IHandlerTarget__factory {
  static readonly abi = _abi;
  static createInterface(): IHandlerTargetInterface {
    return new Interface(_abi) as IHandlerTargetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IHandlerTarget {
    return new Contract(address, _abi, runner) as unknown as IHandlerTarget;
  }
}
