/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, ContractRunner } from "ethers";
import type {
  IBasePositionManager,
  IBasePositionManagerInterface,
} from "../../../core/interfaces/IBasePositionManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "maxGlobalLongSizes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "maxGlobalShortSizes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IBasePositionManager__factory {
  static readonly abi = _abi;
  static createInterface(): IBasePositionManagerInterface {
    return new Interface(_abi) as IBasePositionManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBasePositionManager {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IBasePositionManager;
  }
}
