/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, ContractRunner } from "ethers";
import type {
  IRewardDistributor,
  IRewardDistributorInterface,
} from "../../../staking/interfaces/IRewardDistributor";

const _abi = [
  {
    inputs: [],
    name: "distribute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRewardDistributor__factory {
  static readonly abi = _abi;
  static createInterface(): IRewardDistributorInterface {
    return new Interface(_abi) as IRewardDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRewardDistributor {
    return new Contract(address, _abi, runner) as unknown as IRewardDistributor;
  }
}
